name: .NET Core

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    strategy:
      matrix:
        configuration: [Debug, Release]

    runs-on: ubuntu-latest  # For a list of available runner types, refer to
                             # https://help.github.com/en/actions/reference/workflow-syntax-for-github-actions#jobsjob_idruns-on

    env:
      Solution_Name: ./src/RdpProtocolHandler.sln                         # Replace with your solution name, i.e. MyWpfApp.sln.
      
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x

    - name: Restore dependencies
      run: dotnet restore $env:Solution_Name
      
    - name: Build application
      run: dotnet build $env:Solution_Name --no-restore --configuration $env:Configuration
      env:
        Configuration: ${{ matrix.configuration }}
        
    - name: Check code formatting
      run: dotnet format $env:Solution_Name --severity warn --include-generated --verify-no-changes

    - name: Install SonarScanner
      run: dotnet tool install --global dotnet-sonarscanner
      
    - name: Setup SonarQube
      uses: SonarSource/sonarcloud-github-action@master
      with:
        args: begin /o:konrad /k:konradsikorski_RdpProtocolHandler /d:sonar.login=${{ secrets.SONAR_TOKEN }}

    - name: Analyze
      run: dotnet sonarscanner begin /k:"konradsikorski_RdpProtocolHandler" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" && dotnet build --configuration Release && dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

    - name: Publish Code Quality Results
      run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
